name: Run iOS Tests

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [ main ]

permissions:
  contents: read
  actions: read       # needed to look up the artifact download URL
  pull-requests: write

jobs:
  unit_tests:
    name: Unit Tests
    runs-on: macos-15
    timeout-minutes: 20
    env:
      UNIT_XCRESULT: ${{ runner.temp }}/UnitTests.xcresult
      IPHONE_DEST: "platform=iOS Simulator,name=iPhone 16 Pro,OS=26.0,arch=arm64"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Select Xcode 26.0.1
      run: sudo xcode-select -s /Applications/Xcode_26.0.1.app/Contents/Developer

    - name: Show Xcode version
      run: xcodebuild -version

    - name: Show available simulators
      run: xcrun simctl list devices available

    - name: Resolve Swift Package dependencies
      run: xcodebuild -project Sudoku.xcodeproj -resolvePackageDependencies

    - name: Build and run unit tests (iPhone)
      id: unit_tests
      continue-on-error: true
      run: |
        set -o pipefail
        xcodebuild test \
          -project Sudoku.xcodeproj \
          -scheme SudokuTests \
          -destination "${IPHONE_DEST}" \
          -configuration Debug \
          -resultBundlePath "${UNIT_XCRESULT}" \
          CODE_SIGNING_ALLOWED=NO | xcpretty

    - name: Upload unit test .xcresult bundle
      if: steps.unit_tests.outcome == 'failure'
      uses: actions/upload-artifact@v4
      with:
        name: unit-tests-xcresult-${{ github.run_id }}
        path: ${{ env.UNIT_XCRESULT }}
        if-no-files-found: error
        retention-days: 14

    - name: Comment on pull request
      if: steps.unit_tests.outcome == 'failure'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = context.payload.pull_request.number;

          // List artifacts for this run and find the one we just uploaded
          const { data } = await github.request(
            'GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts',
            {
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.runId
            }
          );
          const name = `unit-tests-xcresult-${context.runId}`;
          const art = data.artifacts.find(a => a.name === name);
          if (!art) {
            throw new Error(`Artifact ${name} not found`);
          }

          // archive_download_url is an authenticated, one-click download for signed-in users
          const body = [
            '‚ùå **Unit tests failed**.',
            '',
            `Download the result bundle (.xcresult): [${name}](${art.archive_download_url})`,
            '',
            `Run details: ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
          ].join('\n');

          await github.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber,
            body
          });
